# this procedure executes something when a packet is generated on a link
proc pkt_sent_8_4_ { my_string } {
	global ns node8 node4 owd_8_4_ mux_period_8_4_ sawtooth_verbose_			;# global variables used in this procedure

	set now [$ns now]

	# I compare the string with " +" in order to check if it corresponds to a packet generation
	set fields [split $my_string]	;# split the string
	lassign $fields first second	;# the second tharacter is the one ineresting for me. It can be "+", "-", "r" and "d"
	if { $second == "+"} {			;# check if the first character is "+"

		# put here the actions to perform each time a packet is generated by node0
		
		# I calculate the time until the end of the period. it is obtained as:
		# [(number of finished periods + 1) * period ] - time from the beginning of the period
		set number_finished_periods_  [expr int( 1000 * $now / $mux_period_8_4_ )]

		set seconds_until_period_ends_ [expr ((( $number_finished_periods_ + 1 ) * 0.001 * $mux_period_8_4_ ) - $now) ] 

		# each time I modify the delay, I have to perform "set link"
		set link8_4_ [[$ns link $node8 $node4] link]
		$ns at $now "$link8_4_ set delay_ [expr $owd_8_4_ + (1000.0 * $seconds_until_period_ends_)]ms"

		if { $sawtooth_verbose_ == 1 } {
			#puts $number_finished_periods_
			#puts "seconds to the end of the period: $seconds_until_period_ends_"
			puts "now: $now; $my_string; delay set to: [expr $owd_8_4_ + (1000.0 * $seconds_until_period_ends_)]ms"
		}
	}
}

proc pkt_sent_9_4_ { my_string } {
	global ns node9 node4 owd_9_4_ mux_period_9_4_ sawtooth_verbose_			;# global variables used in this procedure

	set now [$ns now]

	# I compare the string with " +" in order to check if it corresponds to a packet generation
	set fields [split $my_string]	;# split the string
	lassign $fields first second	;# the second tharacter is the one ineresting for me. It can be "+", "-", "r" and "d"
	if { $second == "+"} {			;# check if the first character is "+"

		# put here the actions to perform each time a packet is generated by node0
		
		# I calculate the time until the end of the period. it is obtained as:
		# [(number of finished periods + 1) * period ] - time from the beginning of the period
		set number_finished_periods_  [expr int( 1000 * $now / $mux_period_9_4_ )]

		set seconds_until_period_ends_ [expr ((( $number_finished_periods_ + 1 ) * 0.001 * $mux_period_9_4_ ) - $now) ] 

		# each time I modify the delay, I have to perform "set link"
		set link9_4_ [[$ns link $node9 $node4] link]
		$ns at $now "$link9_4_ set delay_ [expr $owd_9_4_ + (1000.0 * $seconds_until_period_ends_)]ms"

		if { $sawtooth_verbose_ == 1 } {
			#puts $number_finished_periods_
			#puts "seconds to the end of the period: $seconds_until_period_ends_"
			puts "now: $now; $my_string; delay set to: [expr $owd_9_4_ + (1000.0 * $seconds_until_period_ends_)]ms"
		}
	}
}

proc pkt_sent_10_4_ { my_string } {
	global ns node10 node4 owd_10_4_ mux_period_10_4_ sawtooth_verbose_			;# global variables used in this procedure

	set now [$ns now]

	# I compare the string with " +" in order to check if it corresponds to a packet generation
	set fields [split $my_string]	;# split the string
	lassign $fields first second	;# the second tharacter is the one ineresting for me. It can be "+", "-", "r" and "d"
	if { $second == "+"} {			;# check if the first character is "+"

		# put here the actions to perform each time a packet is generated by node0
		
		# I calculate the time until the end of the period. it is obtained as:
		# [(number of finished periods + 1) * period ] - time from the beginning of the period
		set number_finished_periods_  [expr int( 1000 * $now / $mux_period_10_4_ )]

		set seconds_until_period_ends_ [expr ((( $number_finished_periods_ + 1 ) * 0.001 * $mux_period_10_4_ ) - $now) ] 

		# each time I modify the delay, I have to perform "set link"
		set link10_4_ [[$ns link $node10 $node4] link]
		$ns at $now "$link10_4_ set delay_ [expr $owd_10_4_ + (1000.0 * $seconds_until_period_ends_)]ms"

		if { $sawtooth_verbose_ == 1 } {
			#puts $number_finished_periods_
			#puts "seconds to the end of the period: $seconds_until_period_ends_"
			puts "now: $now; $my_string; delay set to: [expr $owd_10_4_ + (1000.0 * $seconds_until_period_ends_)]ms"
		}
	}
}

proc pkt_sent_11_4_ { my_string } {
	global ns node11 node4 owd_11_4_ mux_period_11_4_ sawtooth_verbose_			;# global variables used in this procedure

	set now [$ns now]

	# I compare the string with " +" in order to check if it corresponds to a packet generation
	set fields [split $my_string]	;# split the string
	lassign $fields first second	;# the second tharacter is the one ineresting for me. It can be "+", "-", "r" and "d"
	if { $second == "+"} {			;# check if the first character is "+"

		# put here the actions to perform each time a packet is generated by node0
		
		# I calculate the time until the end of the period. it is obtained as:
		# [(number of finished periods + 1) * period ] - time from the beginning of the period
		set number_finished_periods_  [expr int( 1000 * $now / $mux_period_11_4_ )]

		set seconds_until_period_ends_ [expr ((( $number_finished_periods_ + 1 ) * 0.001 * $mux_period_11_4_ ) - $now) ] 

		# each time I modify the delay, I have to perform "set link"
		set link11_4_ [[$ns link $node11 $node4] link]
		$ns at $now "$link11_4_ set delay_ [expr $owd_11_4_ + (1000.0 * $seconds_until_period_ends_)]ms"

		if { $sawtooth_verbose_ == 1 } {
			#puts $number_finished_periods_
			#puts "seconds to the end of the period: $seconds_until_period_ends_"
			puts "now: $now; $my_string; delay set to: [expr $owd_11_4_ + (1000.0 * $seconds_until_period_ends_)]ms"
		}
	}
}